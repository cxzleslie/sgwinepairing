data$time_occurred <- as.POSIXct(data$time_occurred)
data$date_occured <- format(data$time_occurred, format = "%Y-%m-%d")
str(date_occured)
str(date_occured)
str(data$date_occured)
data$date_occured <- as.Date(format(data$time_occurred, format = "%Y-%m-%d"))
data$date_occurred - data$date_reported
library(dplyr)
library(ggplot2)
library(leaflet)
library(ggmap)
library(tidyr)
data <- read.csv("LA Crime Data.csv", stringsAsFactors = T)
summary(data)
# Turn date variables into date format
data$date_reported <- as.Date(data$date_reported)
data$time_occurred <- as.POSIXct(data$time_occurred)
data$date_occured <- as.Date(format(data$time_occurred, format = "%Y-%m-%d"))
# In victim age there are 0 values instead of NA, substitute 0s and -1 with NA
data$victim_age[data$victim_age == 0 | data$victim_age == -1] <- NA
# Turn categorical variables into factors
categorical_variables <- c("area", "reporting_district", "crime_code", "premise_code", "weapon_code", "crime_code_1", "crime_code_2", "crime_code_3", "crime_code_4")
for (i in categorical_variables) {
data[i] <- as.factor(data[[i]])
}
# Split location variable into latitude and longitude
data$location <- gsub("[()]", "", data$location)
data <- separate(data, "location", c("Latitude", "Longitude"), sep = ", ")
summary(data)
data %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count)) + geom_bar(stat = "identity")
data <- read.csv("LA Crime Data.csv", stringsAsFactors = T)
summary(data)
# Turn date variables into date format
data$date_reported <- as.Date(data$date_reported)
data$time_occurred <- as.POSIXct(data$time_occurred)
data$date_occurred <- as.Date(format(data$time_occurred, format = "%Y-%m-%d"))
data$year_occurred <- as.numeric(dormat(date_occurred, format = "%Y"))
data <- read.csv("LA Crime Data.csv", stringsAsFactors = T)
summary(data)
# Turn date variables into date format
data$date_reported <- as.Date(data$date_reported)
data$time_occurred <- as.POSIXct(data$time_occurred)
data$date_occurred <- as.Date(format(data$time_occurred, format = "%Y-%m-%d"))
data$year_occurred <- as.numeric(format(date_occurred, format = "%Y"))
data <- read.csv("LA Crime Data.csv", stringsAsFactors = T)
summary(data)
# Turn date variables into date format
data$date_reported <- as.Date(data$date_reported)
data$time_occurred <- as.POSIXct(data$time_occurred)
data$date_occurred <- as.Date(format(data$time_occurred, format = "%Y-%m-%d"))
data$year_occurred <- as.numeric(format(data$date_occurred, format = "%Y"))
# In victim age there are 0 values instead of NA, substitute 0s and -1 with NA
data$victim_age[data$victim_age == 0 | data$victim_age == -1] <- NA
# Turn categorical variables into factors
categorical_variables <- c("area", "reporting_district", "crime_code", "premise_code", "weapon_code", "crime_code_1", "crime_code_2", "crime_code_3", "crime_code_4")
for (i in categorical_variables) {
data[i] <- as.factor(data[[i]])
}
# Split location variable into latitude and longitude
data$location <- gsub("[()]", "", data$location)
data <- separate(data, "location", c("Latitude", "Longitude"), sep = ", ")
summary(data)
data %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count)) + geom_bar(stat = "identity")
min(data$date_occurred)
max(data$date_occurred)
ggplot(data, aes(x = as.numeric(format(data$time_occurred, format = "%H")))) + geom_density() +
labs(x = "Hour of the day")
data$date_occurred - data$date_reported
data$days_to_report <- data$date_occurred - data$date_reported
ggplot(data, aes(x = days_to_report)) + geom_density()
data$days_to_report <- data$date_reported - data$date_occurred
ggplot(data, aes(x = days_to_report)) + geom_density()
data$days_to_report <- data$date_reported - data$date_occurred
ggplot(data, aes(x = days_to_report)) + scale_x_log10() + geom_density()
data$days_to_report <- as.numeric(data$date_reported - data$date_occurred)
ggplot(data, aes(x = days_to_report)) + scale_x_log10() + geom_density()
data$days_to_report <- as.numeric(data$date_reported - data$date_occurred)
ggplot(data, aes(x = days_to_report, color = victim_sex)) + scale_x_log10() + geom_density()
# Turn empty cells to NA in victim_sex
data$victim_sex[data$victim_sex == ""] <- NA
View(data)
data$days_to_report <- as.numeric(data$date_reported - data$date_occurred)
ggplot(data, aes(x = days_to_report, color = victim_sex)) + scale_x_log10() + geom_density()
data$days_to_report <- as.numeric(data$date_reported - data$date_occurred)
ggplot(data[!is.na(data$victim_sex), ], aes(x = days_to_report, color = victim_sex)) + scale_x_log10() + geom_density()
data$month_occurred <- as.numeric(format(data$date_occurred, format = "%m"))
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
data$month_occurred <- factor(format(data$date_occurred, format = "%m"), levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
data$month_occurred <- factor(format(data$date_occurred, format = "%m"), levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
data$month_occurred <- as.factor(format(data$date_occurred, format = "%m"), levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
data$month_occurred <- factor(data$month_occurred,levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data)
data$month_occurred <- as.factor(format(data$date_occurred, format = "%m"))
View(data)
data$month_occurred <- as.factor(format(data$date_occurred, format = "%m"), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
data$month_occurred <- factor(format(data$date_occurred, format = "%m"), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data)
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
data$days_to_report <- as.numeric(data$date_reported - data$date_occurred)
ggplot(data[!is.na(data$victim_sex), ], aes(x = days_to_report, color = victim_sex)) + scale_x_log10() + geom_density()
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_line())
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_line()
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
data[data$year_occurred == 2022, ] %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
ggplot(data, aes(x = crime_code)) + geom_density() +
labs(x = "Hour of the day")
ggplot(data, aes(x = crime_code)) + geom_bar()
data %>% group_by(crime_description) %>% summarize(count = n()) %>% head(5)
data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(count) %>% head(5)
data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
ggplot(data, aes(x = suspect_age, y = victim_age)) + geom_point()
ggplot(data, aes(x = suspect_age)) + geom_density()
ggplot(data, aes(x = victim_age)) + geom_density()
levels(data$crime_description)
data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)$crime_description
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes <- most_common_crimes$crime_description
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes <- most_common_crimes$crime_description
most_common_crimes
common_crimes_data <- data[data$crime_description %in% most_common_crimes, ]
View(common_crimes_data)
ggplot(common_crimes_data, aes(x = suspect_age)) + geom_density()
ggplot(common_crimes_data, aes(x = suspect_age, color = crime_description )) + geom_density()
ggplot(data, aes(x = victim_age, color = crime_description)) + geom_density()
ggplot(common_crimes_data, aes(x = victim_age, color = crime_description)) + geom_density()
data %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity")
data %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity")
data$suspect_sex[data$suspect_sex == ""] <- NA
data %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity")
View(data)
data$suspect_sex[data$suspect_sex == " "] <- NA
View(data)
data %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity")
data %>% group_by(month_occurred, victim_sex) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count, fill = victim_sex)) + geom_bar(stat = "identity")
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
ggplot(data, aes(x = as.numeric(format(data$time_occurred, format = "%H")), color = victim_sex)) + geom_density() +
labs(x = "Hour of the day")
ggplot(data, aes(x = as.numeric(format(data$time_occurred, format = "%H")), color = suspect_sex)) + geom_density() +
labs(x = "Hour of the day")
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity")
most_common_crimes <- most_common_crimes$crime_description
common_crimes_data <- data[data$crime_description %in% most_common_crimes, ]
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels = most_common_crimes$crime_description[order(most_common_crimes$count, decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity")
most_common_crimes <- most_common_crimes$crime_description
common_crimes_data <- data[data$crime_description %in% most_common_crimes, ]
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels = most_common_crimes$crime_description[order(most_common_crimes$count, decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity")
most_common_crimes <- most_common_crimes$crime_description
common_crimes_data <- data[data$crime_description %in% most_common_crimes, ] + theme(axis.text.x = element_text(angle = 45, hjust = 1))
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels = most_common_crimes$crime_description[order(most_common_crimes$count, decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
most_common_crimes <- most_common_crimes$crime_description
common_crimes_data <- data[data$crime_description %in% most_common_crimes, ]
ggplot(data, aes(x = as.numeric(format(data$time_occurred, format = "%H")))) + geom_density() +
labs(x = "Hour of the day")
ggplot(common_crimes_data, aes(x = as.numeric(format(data$time_occurred, format = "%H")), color = crime_description)) + geom_density() +
labs(x = "Hour of the day")
ggplot(common_crimes_data, aes(x = as.numeric(format(common_crimes_data$time_occurred, format = "%H")), color = crime_description)) + geom_density() +
labs(x = "Hour of the day")
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "VEHICLE - STOLEN" | common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
View(vehicles_crimes)
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
data$Longitude <- as.numeric(data$Longitude)
data$Latitude <- as.numeric(data$Latitude)
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels = most_common_crimes$crime_description[order(most_common_crimes$count, decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
most_common_crimes <- most_common_crimes$crime_description
common_crimes_data <- data[data$crime_description %in% most_common_crimes, ]
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude)
map
vehicles_crimes$hour_occurred <- as.numeric(format(common_crimes_data$time_occurred, format = "%H")
vehicles_crimes$hour_occurred <- as.numeric(format(common_crimes_data$time_occurred, format = "%H"))
vehicles_crimes$hour_occurred <- as.numeric(format(common_crimes_data$time_occurred, format = "%H"))
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
?cut
cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24))
cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T)
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = vehicles_crimes$hour_category)
map
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, fill = vehicles_crimes$hour_category)
map
str(vehicles_crimes$hour_category)
summary(vehicles_crimes$hour_category)
View(vehicles_crimes)
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
summary(vehicles_crimes$hour_category)
str(vehicles_crimes$hour_category)
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = vehicles_crimes$hour_category)
map
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = ~hour_category)
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = vehicles_crimes$hour_category)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = vehicles_crimes$hour_category, radius = 0.5)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = vehicles_crimes$hour_category, radius = 1)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = vehicles_crimes$hour_category, radius = 3)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude, color = "red", radius = 3)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 12, 18, 24), include.lowest = T, labels = c("Night", "Morning", "Afternoon", "Evening"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude,
color = ifelse(vehicles_crimes$hour_category == "Night", "blue", ifelse(
vehicles_crimes$hour_category == "Morning", "red", ifelse(
vehicles_crimes$hour_category == "Afternoon", "orange", "black"
))), radius = 3)
map
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T, labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude,
color = ifelse(vehicles_crimes$hour_category == "Night", "blue", ifelse(
vehicles_crimes$hour_category == "Early day", "red", "black"
)), radius = 3)
map
data <- read.csv("LA Crime Data.csv", stringsAsFactors = T)
summary(data)
data$suspect_sex[data$suspect_sex == " "] <- NA
# Turn date variables into date format
data$date_reported <- as.Date(data$date_reported)
data$time_occurred <- as.POSIXct(data$time_occurred)
data$date_occurred <- as.Date(format(data$time_occurred, format = "%Y-%m-%d"))
data$year_occurred <- as.numeric(format(data$date_occurred, format = "%Y"))
data$month_occurred <- factor(format(data$date_occurred, format = "%m"), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
# In victim age there are 0 values instead of NA, substitute 0s and -1 with NA
data$victim_age[data$victim_age == 0 | data$victim_age == -1] <- NA
# Turn empty cells to NA in victim_sex and suspect_sex
data$victim_sex[data$victim_sex == ""] <- NA
data$suspect_sex[data$suspect_sex == " "] <- NA
# Turn categorical variables into factors
categorical_variables <- c("area", "reporting_district", "crime_code", "premise_code", "weapon_code", "crime_code_1", "crime_code_2", "crime_code_3", "crime_code_4")
for (i in categorical_variables) {
data[i] <- as.factor(data[[i]])
}
# Split location variable into latitude and longitude
data$location <- gsub("[()]", "", data$location)
data <- separate(data, "location", c("Latitude", "Longitude"), sep = ", ")
data$Longitude <- as.numeric(data$Longitude)
data$Latitude <- as.numeric(data$Latitude)
summary(data)
data %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity") +
lab(x = "Year", title = "Evolution of number of crimes committed over the years")
data %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity") +
labs(x = "Year", title = "Evolution of number of crimes committed over the years")
data[data$year_occurred != 2023, ] %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity")
data[data$month_occurred != "Jan", ] %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count)) + geom_bar(stat = "identity")
data[data$year_occurred != 2023, ] %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity") +
labs(x = "Crime month", title = "Distribution of crime occurrences through the year")
data[data$month_occurred != "Jan", ] %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count)) + geom_bar(stat = "identity") + labs(x = "Year", title = "Crimes occurred in January")
data %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity") +
labs(x = "Year", title = "Evolution of number of crimes committed over the years")
min(data$date_occurred)
max(data$date_occurred)
data %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity") + labs(x = "Crime month", title = "Distribution of crime occurrences through the year")
data[data$year_occurred != 2023, ] %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity") +
labs(x = "Crime month", title = "Distribution of crime occurrences through the year (no 2023")
data[data$year_occurred != 2023, ] %>% group_by(month_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = month_occurred, y = count)) + geom_bar(stat = "identity") +
labs(x = "Crime month", title = "Distribution of crime occurrences through the year (no 2023)")
ggplot(data, aes(x = as.numeric(format(data$time_occurred, format = "%H")))) + geom_density() +
labs(x = "Hour of the day", title = "Distribution of crimes throughout the day")
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels =
most_common_crimes$crime_description[order(most_common_crimes$count,
decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(most_common_crimes)
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels =
most_common_crimes$crime_description[order(most_common_crimes$count,
decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Most common crimes", x = "Crime")
ggplot(common_crimes_data, aes(x = suspect_age, color = crime_description)) + geom_density() +
labs("Density of crimes by age of the suspect")
ggplot(common_crimes_data, aes(x = suspect_age, color = crime_description)) + geom_density() +
labs(title = "Density of crimes by age of the suspect")
ggplot(common_crimes_data, aes(x = victim_age, color = crime_description)) + geom_density() +
labs(title = "Density of crimes by age of the victim")
ggplot(common_crimes_data, aes(x = as.numeric(format(common_crimes_data$time_occurred, format = "%H")), color = crime_description)) + geom_density() +
labs(x = "Hour of the day", title = "Distirbution of crimes by hour of the day")
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
ggplot(vehicles_crimes, aes(x = hour_occurred)) + geom_density() +
labs(x = "Hour of the day", title = "Distirbution of crimes by hour of the day")
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
ggplot(vehicles_crimes, aes(x = hour_occurred, color = premise_description)) + geom_density() +
labs(x = "Hour of the day", title = "Distirbution of crimes by hour of the day")
# We want to get the 5 most common premises for such crime
vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count))
# We want to get the 5 most common premises for such crime
vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
# We want to get the 5 most common premises for such crime
vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5) %>% as.vector(select(premise_description))
# We want to get the 5 most common premises for such crime
vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5) %>% as.vector(select("premise_description"))
# We want to get the 5 most common premises for such crime
vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
# We want to get the 5 most common premises for such crime
common_premises <- vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
common_premises <- common_premises$premise_description
common_premises <- vehicles_crimes[vehicles_crimes$premise_description %in% common_premises, ]
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
# We want to get the 5 most common premises for such crime
common_premises <- vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
common_premises <- common_premises$premise_description
common_premises <- vehicles_crimes[vehicles_crimes$premise_description %in% common_premises, ]
ggplot(common_premises, aes(x = hour_occurred, color = premise_description)) + geom_density() +
labs(x = "Hour of the day", title = "Distirbution of crimes by hour of the day")
common_premises <- common_premises$premise_description
ggplot(common_premises, aes(x = premise_description, y = count)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Most common premises for burglary from vehicle", x = "Premis")
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
# We want to get the 5 most common premises for such crime
common_premises <- vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
ggplot(common_premises, aes(x = premise_description, y = count)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Most common premises for burglary from vehicle", x = "Premis")
common_premises <- common_premises$premise_description
common_premises <- vehicles_crimes[vehicles_crimes$premise_description %in% common_premises, ]
ggplot(common_premises, aes(x = hour_occurred, color = premise_description)) + geom_density() +
labs(x = "Hour of the day", title = "Distirbution of crimes by hour of the day")
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
# We want to get the 5 most common premises for such crime
common_premises <- vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
common_premises$premise <- factor(common_premises$premise, levels =
common_premises$premise[order(common_premises$count,
decreasing = T)])
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
# We want to get the 5 most common premises for such crime
common_premises <- vehicles_crimes %>% group_by(premise_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
common_premises$premise_description <- factor(common_premises$premise_description, levels =
common_premises$premise_description[order(common_premises$count,
decreasing = T)])
ggplot(common_premises, aes(x = premise_description, y = count)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Most common premises for burglary from vehicle", x = "Premise")
library(dplyr)
library(ggplot2)
library(leaflet)
library(ggmap)
library(tidyr)
library(gganimate)
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude,
color = ifelse(vehicles_crimes$hour_category == "Night", "blue", ifelse(
vehicles_crimes$hour_category == "Early day", "red", "black"
)), radius = 3) +
transition_time(vehicles_crimes$hour_occurred) +
ease_aes('linear')
map
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = vehicles_crimes$Longitude, lat = vehicles_crimes$Latitude,
color = ifelse(vehicles_crimes$hour_category == "Night", "blue", ifelse(
vehicles_crimes$hour_category == "Early day", "red", "black"
)), radius = 3)
map
library(dplyr)
library(ggplot2)
library(leaflet)
library(ggmap)
library(tidyr)
a <- vehicles_crimes[vehicles_crimes$premise_description == "STREET", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = a$Longitude, lat = a$Latitude,
color = ifelse(a$hour_category == "Night", "blue", ifelse(
a$hour_category == "Early day", "red", "black"
)), radius = 3)
map
street_burglary <- vehicles_crimes[vehicles_crimes$premise_description == "STREET", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = street_burglary$Longitude, lat = street_burglary$Latitude,
color = ifelse(street_burglary$hour_category == "Night", "blue", ifelse(
a$hour_category == "Early day", "red", "black"
)), radius = 3)
map
street_burglary <- vehicles_crimes[vehicles_crimes$premise_description == "STREET", ]
map <- leaflet() %>% addTiles() %>% setView(lng = mean(vehicles_crimes$Longitude), lat = mean(vehicles_crimes$Latitude), zoom = 12)
map <- addCircleMarkers(map, lng = street_burglary$Longitude, lat = street_burglary$Latitude,
color = ifelse(street_burglary$hour_category == "Night", "blue", ifelse(
street_burglary$hour_category == "Early day", "red", "black"
)), radius = 3)
map
vehicles_crimes %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count)) + geom_bar(stat = "identity") +
labs(x = "Year", title = "Evolution of number of crimes committed over the years")
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
vehicles_crimes %>% group_by(year_occurred) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count)) + geom_bar(stat = "identity") +
labs(x = "Year", title = "Evolution of number of burglary from vehicles committed over the years")
vehicles_crimes <- common_crimes_data[common_crimes_data$crime_description == "BURGLARY FROM VEHICLE", ]
# Create a categorical variable to store the moment of the day in which the crime occurred
vehicles_crimes$hour_occurred <- as.numeric(format(vehicles_crimes$time_occurred, format = "%H"))
vehicles_crimes$hour_category <- cut(vehicles_crimes$hour_occurred, breaks = c(0, 6, 16, 22, 24), include.lowest = T,
labels = c("Night", "Early day", "Afternoon - Evening", "Night"))
vehicles_crimes %>% group_by(year_occurred, suspect_sex) %>% summarize(count = n()) %>% ggplot(aes(x = year_occurred, y = count, fill = suspect_sex)) + geom_bar(stat = "identity") +
labs(x = "Year", title = "Evolution of number of burglary from vehicles committed over the years")
most_common_crimes <- data %>% group_by(crime_description, victim_sex) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels =
most_common_crimes$crime_description[order(most_common_crimes$count,
decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count, fill = victim_sex)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Most common crimes", x = "Crime")
most_common_crimes <- data %>% group_by(crime_description) %>% summarize(count = n()) %>% arrange(desc(count)) %>% head(5)
most_common_crimes$crime_description <- factor(most_common_crimes$crime_description, levels =
most_common_crimes$crime_description[order(most_common_crimes$count,
decreasing = T)])
ggplot(most_common_crimes, aes(x = crime_description, y = count)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Most common crimes", x = "Crime")
shiny::runApp('Team Project')
runApp('Team Project')
runApp('Team Project')
runApp('Team Project')
shiny::runApp()
